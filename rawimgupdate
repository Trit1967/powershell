# Store the script start time
$startTime = Get-Date
Write-Host "Starting RAW Image Extension version check at $startTime" -ForegroundColor Cyan

# PART 1: Check current version
Write-Host "`n===== CHECKING CURRENT VERSION =====" -ForegroundColor Yellow
$currentApp = Get-AppxPackage Microsoft.RawImageExtension
if ($currentApp) {
    $currentVersion = $currentApp.Version
    Write-Host "Current installed version: $currentVersion" -ForegroundColor Green
    
    # Show more details about the current installation
    Write-Host "Installation location: $($currentApp.InstallLocation)" -ForegroundColor Gray
    Write-Host "Package full name: $($currentApp.PackageFullName)" -ForegroundColor Gray
} else {
    Write-Host "RAW Image Extension is not currently installed" -ForegroundColor Red
    $currentVersion = "0.0.0.0"
}

# Define the latest known version
$latestKnownVersion = "2.5.5.0"
Write-Host "Latest known version: $latestKnownVersion" -ForegroundColor Cyan

# Check if update is needed
if ([version]$currentVersion -lt [version]$latestKnownVersion) {
    Write-Host "Update recommended" -ForegroundColor Yellow
} else {
    Write-Host "You appear to have the latest version based on our records" -ForegroundColor Green
}

# PART 2: Instructions for manual update
Write-Host "`n===== UPDATE OPTIONS =====" -ForegroundColor Yellow
Write-Host "To update the RAW Image Extension, use one of these methods:" -ForegroundColor Cyan
Write-Host "1. Microsoft Store: Open Microsoft Store > Library > Get updates" -ForegroundColor White
Write-Host "2. PowerShell (Run as Admin): Add-AppxPackage -Register '$($currentApp.InstallLocation)\AppxManifest.xml' -DisableDevelopmentMode" -ForegroundColor White

Write-Host "`nAfter updating, run the final part of this script to verify the new version" -ForegroundColor Yellow
$continue = Read-Host "Press Enter after you've updated the extension (or type 'skip' to check without updating)"

# PART 3: Check new version after update
Write-Host "`n===== CHECKING NEW VERSION =====" -ForegroundColor Yellow
Write-Host "Checking installed version after update attempt..."
$newApp = Get-AppxPackage Microsoft.RawImageExtension
if ($newApp) {
    $newVersion = $newApp.Version
    Write-Host "Current installed version: $newVersion" -ForegroundColor Green
    
    # Compare versions before and after
    if ([version]$newVersion -gt [version]$currentVersion) {
        Write-Host "SUCCESS: RAW Image Extension was updated from $currentVersion to $newVersion" -ForegroundColor Green
    } elseif ([version]$newVersion -eq [version]$currentVersion) {
        Write-Host "NO CHANGE: RAW Image Extension version remained at $currentVersion" -ForegroundColor Yellow
    } else {
        Write-Host "WARNING: RAW Image Extension version changed from $currentVersion to $newVersion (downgrade?)" -ForegroundColor Red
    }
} else {
    Write-Host "ERROR: Cannot find RAW Image Extension after update attempt" -ForegroundColor Red
}

# Calculate and display execution time
$endTime = Get-Date
$executionTime = $endTime - $startTime
Write-Host "`nScript completed in $($executionTime.TotalSeconds) seconds" -ForegroundColor Cyan
