# Store the script start time
$startTime = Get-Date
Write-Host "Starting RAW Image Extension version check and update at $startTime" -ForegroundColor Cyan

# PART 1: Check current version
Write-Host "`n===== CHECKING CURRENT VERSION =====" -ForegroundColor Yellow
$currentApp = Get-AppxPackage Microsoft.RawImageExtension
if ($currentApp) {
    $currentVersion = $currentApp.Version
    Write-Host "Current installed version: $currentVersion" -ForegroundColor Green
    
    # Show more details about the current installation
    Write-Host "Installation location: $($currentApp.InstallLocation)" -ForegroundColor Gray
    Write-Host "Package full name: $($currentApp.PackageFullName)" -ForegroundColor Gray
} else {
    Write-Host "RAW Image Extension is not currently installed" -ForegroundColor Red
    $currentVersion = "0.0.0.0"
}

# Define the latest known version
$latestKnownVersion = "2.5.5.0"
Write-Host "Latest known version: $latestKnownVersion" -ForegroundColor Cyan

# Check if update is needed
if ([version]$currentVersion -lt [version]$latestKnownVersion) {
    Write-Host "Update recommended" -ForegroundColor Yellow
} else {
    Write-Host "You appear to have the latest version based on our records" -ForegroundColor Green
}

# PART 2: Automatic update using Add-AppxPackage
Write-Host "`n===== PERFORMING AUTOMATIC UPDATE =====" -ForegroundColor Yellow

if ($currentApp) {
    try {
        Write-Host "Attempting to update RAW Image Extension..." -ForegroundColor Cyan
        Add-AppxPackage -Register "$($currentApp.InstallLocation)\AppxManifest.xml" -DisableDevelopmentMode -ErrorAction Stop
        Write-Host "Update command executed successfully" -ForegroundColor Green
    }
    catch {
        Write-Host "Error during update: $_" -ForegroundColor Red
        Write-Host "You may need to run this script as Administrator" -ForegroundColor Yellow
    }
} else {
    Write-Host "Cannot update as the extension is not currently installed" -ForegroundColor Red
    Write-Host "Please install from the Microsoft Store first" -ForegroundColor Yellow
}

# PART 3: Check new version after update
Write-Host "`n===== VERIFYING UPDATE =====" -ForegroundColor Yellow
Write-Host "Checking installed version after update attempt..."
$newApp = Get-AppxPackage Microsoft.RawImageExtension
if ($newApp) {
    $newVersion = $newApp.Version
    Write-Host "Current installed version: $newVersion" -ForegroundColor Green
    
    # Compare versions before and after
    if ([version]$newVersion -gt [version]$currentVersion) {
        Write-Host "SUCCESS: RAW Image Extension was updated from $currentVersion to $newVersion" -ForegroundColor Green
    } elseif ([version]$newVersion -eq [version]$currentVersion) {
        Write-Host "NO CHANGE: RAW Image Extension version remained at $currentVersion" -ForegroundColor Yellow
    } else {
        Write-Host "WARNING: RAW Image Extension version changed from $currentVersion to $newVersion (downgrade?)" -ForegroundColor Red
    }
} else {
    Write-Host "ERROR: Cannot find RAW Image Extension after update attempt" -ForegroundColor Red
}

# Calculate and display execution time
$endTime = Get-Date
$executionTime = $endTime - $startTime
Write-Host "`nScript completed in $($executionTime.TotalSeconds) seconds" -ForegroundColor Cyan
