
# ——— CONFIGURE THIS ———
# UNC path (including filename) where all machines will append their report
$CsvPath = '\\YourServer\Share\rawimage_versions.csv'
# —————————————————————

# Gather machine info
$MachineName = $env:COMPUTERNAME
$Timestamp   = (Get-Date).ToString('s')

# — Detect Store-installed extension —
$pkg = Get-AppxPackage -AllUsers |
       Where-Object Name -like '*RawImageExtension*'
if ($pkg) {
    $AppxVersion = $pkg.Version.ToString()
} else {
    $AppxVersion = ''
}

# — Detect Raw Image FOD capability entries —
$capEntries = Get-WindowsCapability -Online |
              Where-Object Name -like 'Microsoft.Windows.RawImageExtension*'

# Pick the first (usually the only) capability entry for version/state
if ($capEntries) {
    $cap         = $capEntries[0]
    $CapabilityVersion = ($cap.Name -split '~~~~')[1]
    $CapabilityState   = $cap.State
} else {
    $CapabilityVersion = ''
    $CapabilityState   = ''
}

# — Upgrade / Install the FOD capability —
foreach ($entry in $capEntries) {
    try {
        Add-WindowsCapability -Online -Name $entry.Name -ErrorAction Stop |
            Out-Null
        Write-Host "✔ Refreshed FOD capability: $($entry.Name)"
    }
    catch {
        Write-Warning "⚠ Failed to refresh FOD $($entry.Name): $_"
    }
}

# Re-query state in case it changed
if ($cap) {
    $new = Get-WindowsCapability -Online |
           Where-Object Name -eq $cap.Name
    $CapabilityState = $new.State
}

# — Determine Installed status —
if ($pkg -or $CapabilityState -eq 'Installed') {
    $Installed = 'Yes'
} else {
    $Installed = 'No'
}

# — Build the record for CSV —
$Record = [PSCustomObject]@{
    MachineName       = $MachineName
    Timestamp         = $Timestamp
    AppxVersion       = $AppxVersion
    CapabilityVersion = $CapabilityVersion
    CapabilityState   = $CapabilityState
    Installed         = $Installed
}

# — Ensure the share’s folder exists —
$Folder = Split-Path $CsvPath
if (-not (Test-Path $Folder)) {
    New-Item -Path $Folder -ItemType Directory -Force | Out-Null
}

# — Export or append to CSV —
if (-not (Test-Path $CsvPath)) {
    $Record | Export-Csv -Path $CsvPath -NoTypeInformation
} else {
    $Record | Export-Csv -Path $CsvPath -NoTypeInformation -Append
}

Write-Host "Recorded Raw Image Extension info (Installed=$Installed) to $CsvPath"
