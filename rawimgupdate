
# CONFIGURE THIS --
# UNC path (including filename) where all machines will append their report
$CsvPath = '\\YourServer\Share\rawimage_versions.csv'

# Gather machine info
$MachineName = $env:COMPUTERNAME
$Timestamp   = Get-Date -Format 's'

# Detect Store-installed extension
$pkg = Get-AppxPackage -AllUsers |
       Where-Object { $_.Name -like '*RawImageExtension*' }
$AppxVersion = if ($null -ne $pkg) { $pkg.Version.ToString() } else { '' }

# Detect FOD capability entries
$capEntries = Get-WindowsCapability -Online |
              Where-Object { $_.Name -like 'Microsoft.Windows.RawImageExtension*' }

# Default values
$CapabilityVersion = ''
$CapabilityState   = ''

if ($capEntries.Count -gt 0) {
    # Take the first entry for version/state
    $firstCap = $capEntries[0]
    $CapabilityVersion = ($firstCap.Name -split '~~~~')[1]
    $CapabilityState   = $firstCap.State

    # Refresh/install each matching capability
    foreach ($cap in $capEntries) {
        try {
            Add-WindowsCapability -Online -Name $cap.Name -ErrorAction Stop | Out-Null
            Write-Host "FOD refreshed: $($cap.Name)"
        }
        catch {
            Write-Warning "Failed to refresh FOD $($cap.Name): $_"
        }
    }
}

# Check final installed status
$capInstalled = Get-WindowsCapability -Online |
                Where-Object { $_.Name -like 'Microsoft.Windows.RawImageExtension*' -and $_.State -eq 'Installed' }

$Installed = if ($pkg -or $capInstalled) { 'Yes' } else { 'No' }

# Build the CSV record
$Record = [PSCustomObject]@{
    MachineName       = $MachineName
    Timestamp         = $Timestamp
    AppxVersion       = $AppxVersion
    CapabilityVersion = $CapabilityVersion
    CapabilityState   = $CapabilityState
    Installed         = $Installed
}

# Ensure the destination folder exists
$Folder = Split-Path $CsvPath -Parent
if (-not (Test-Path $Folder)) {
    New-Item -Path $Folder -ItemType Directory -Force | Out-Null
}

# Export or append to CSV
if (-not (Test-Path $CsvPath)) {
    $Record | Export-Csv -Path $CsvPath -NoTypeInformation -Force
}
else {
    $Record | Export-Csv -Path $CsvPath -NoTypeInformation -Append
}

Write-Host "Recorded Raw Image Extension info (Installed=$Installed) to $CsvPath"
