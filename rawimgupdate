
# ——— CONFIGURE THIS ———
# UNC path (including filename) where all machines will append their report
$CsvPath = '\\Y400467ourServer\Share\rawimage_versions.csv'
# —————————————————————

# Gather machine info
$MachineName = $env:COMPUTERNAME
$Timestamp   = (Get-Date).ToString('s')

# Method 1: Store-installed extension
$pkg = Get-AppxPackage -AllUsers | Where-Object Name -like '*RawImageExtension*'
if ($pkg) {
    $AppxVersion = $pkg.Version.ToString()
} else {
    $AppxVersion = ''
}

# Method 2: Features-on-Demand capability
$cap = Get-WindowsCapability -Online | Where-Object Name -like 'Microsoft.Windows.RawImageExtension*'
if ($cap) {
    $Parts         = $cap.Name -split '~~~~'
    $CapabilityVersion = $Parts[1]
    $CapabilityState   = $cap.State
} else {
    $CapabilityVersion = ''
    $CapabilityState   = ''
}

# Build a single object for CSV
$Record = [PSCustomObject]@{
    MachineName        = $MachineName
    Timestamp          = $Timestamp
    AppxVersion        = $AppxVersion
    CapabilityVersion  = $CapabilityVersion
    CapabilityState    = $CapabilityState
}

# Ensure the share’s folder exists
$Folder = Split-Path $CsvPath
if (-not (Test-Path $Folder)) {
    New-Item -Path $Folder -ItemType Directory -Force | Out-Null
}

# Export or append to CSV
if (-not (Test-Path $CsvPath)) {
    $Record | Export-Csv -Path $CsvPath -NoTypeInformation
} else {
    $Record | Export-Csv -Path $CsvPath -NoTypeInformation -Append
}

Write-Host "Recorded Raw Image Extension info to $CsvPath"
